{"version":3,"sources":["../src/provider.tsx"],"sourcesContent":["'use client';\n\nimport React, { FC, ReactNode, useContext, useEffect, useMemo } from 'react';\nimport { CookieAttributes, Cookies } from './types';\nimport jsCookies from 'js-cookie';\nimport { ServerInsertedHTMLContext } from 'next/navigation';\nimport { ServerInsertedHTMLHook } from 'next/dist/shared/lib/server-inserted-html';\nimport { Ctx } from './context';\nimport { CookieRecord, SecureValueRef, useSecureCookies } from './secure';\n\ntype CookieCommand = {\n  [key in keyof Cookies]: [key, ...Parameters<Cookies[key]>];\n}['set' | 'remove'];\n\ntype SerializedValue<T> = {\n  [K in keyof T]: Date extends T[K]\n    ? string\n    : object extends T[K]\n    ? SerializedValue<T[K]>\n    : T[K];\n};\n\nconst windowVarName = '__cookies_commands';\n\ndeclare global {\n  interface Window {\n    [windowVarName]: SerializedValue<CookieCommand>[];\n  }\n}\n\n/**\n * @deprecated Use `<CookiesProvider />` from `next-client-cookies/server` instead.\n */\nexport const CookiesProvider: FC<{\n  value: CookieRecord[];\n  children: ReactNode;\n}> = ({ value, children }) => {\n  const cookies = useCookieRecords(value);\n\n  return <Ctx.Provider value={cookies}>{children}</Ctx.Provider>;\n};\n\nexport const SecureCookiesProvider: FC<{\n  value: SecureValueRef;\n  children: ReactNode;\n}> = ({ value, children }) => {\n  const secureValue = useSecureCookies(value);\n  const cookies = secureValue ? useCookieRecords(secureValue) : null;\n\n  return <Ctx.Provider value={cookies}>{children}</Ctx.Provider>;\n};\n\nconst useCookieRecords = (value: CookieRecord[]): Cookies => {\n  const insertedHTML = useContext<ServerInsertedHTMLHook | null>(\n    ServerInsertedHTMLContext as never,\n  );\n\n  const cookies = useMemo((): Cookies => {\n    const map: Partial<Record<string, string>> = Object.fromEntries(\n      value.map((c) => [c.name, c.value]),\n    );\n\n    return {\n      get: (name?: string) => (name == null ? { ...map } : map[name]) as never,\n      set: (...args) => {\n        insertedHTML?.(() => getCookieCommandHtml('set', ...args));\n        map[args[0]] = args[1];\n      },\n      remove: (...args) => {\n        insertedHTML?.(() => getCookieCommandHtml('remove', ...args));\n        delete map[args[0]];\n      },\n    };\n  }, [value, insertedHTML]);\n\n  useEffect(() => {\n    const commands = window[windowVarName] || [];\n    if (!commands.length) return;\n\n    for (const command of commands) {\n      runCookieCommand(command);\n    }\n  }, []);\n\n  return cookies;\n};\n\nconst getCookieCommandHtml = (...command: CookieCommand) => (\n  <script\n    dangerouslySetInnerHTML={{\n      __html: `window.${windowVarName} = window.${windowVarName} || [];window.${windowVarName}.push(${JSON.stringify(\n        command,\n      ).replaceAll('</', '<\\\\/')});`,\n    }}\n  />\n);\n\nconst runCookieCommand = (command: SerializedValue<CookieCommand>) => {\n  if (typeof window === 'undefined') return;\n\n  switch (command[0]) {\n    case 'set': {\n      jsCookies.set(\n        command[1],\n        command[2],\n        command[3] && deserializeCookieAttributes(command[3]),\n      );\n      break;\n    }\n\n    case 'remove': {\n      jsCookies.remove(\n        command[1],\n        command[2] && deserializeCookieAttributes(command[2]),\n      );\n      break;\n    }\n  }\n};\n\nconst deserializeCookieAttributes = (\n  attributes: SerializedValue<CookieAttributes>,\n): CookieAttributes => ({\n  ...attributes,\n  expires:\n    typeof attributes.expires === 'string'\n      ? new Date(attributes.expires)\n      : attributes.expires,\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,mBAAqE;AAErE,uBAAsB;AACtB,wBAA0C;AAE1C,qBAAoB;AACpB,oBAA+D;AAc/D,MAAMA,gBAAgB;AAWf,MAAMC,kBAGR,wBAAC,EAAEC,OAAOC,SAAQ,MAAE;AACvB,QAAMC,UAAUC,iBAAiBH,KAAAA;AAEjC,SAAO,6BAAAI,QAAA,cAACC,mBAAIC,UAAQ;IAACN,OAAOE;KAAUD,QAAAA;AACxC,GAJK;AAME,MAAMM,wBAGR,wBAAC,EAAEP,OAAOC,SAAQ,MAAE;AACvB,QAAMO,kBAAcC,gCAAiBT,KAAAA;AACrC,QAAME,UAAUM,cAAcL,iBAAiBK,WAAAA,IAAe;AAE9D,SAAO,6BAAAJ,QAAA,cAACC,mBAAIC,UAAQ;IAACN,OAAOE;KAAUD,QAAAA;AACxC,GALK;AAOL,MAAME,mBAAmB,wBAACH,UAAAA;AACxB,QAAMU,mBAAeC,yBACnBC,2CAAAA;AAGF,QAAMV,cAAUW,sBAAQ,MAAA;AACtB,UAAMC,MAAuCC,OAAOC,YAClDhB,MAAMc,IAAI,CAACG,MAAM;MAACA,EAAEC;MAAMD,EAAEjB;KAAM,CAAA;AAGpC,WAAO;MACLmB,KAAK,CAACD,SAAmBA,QAAQ,OAAO;QAAE,GAAGJ;MAAI,IAAIA,IAAII,IAAAA;MACzDE,KAAK,IAAIC,SAAAA;AACPX,uBAAe,MAAMY,qBAAqB,OAAA,GAAUD,IAAAA,CAAAA;AACpDP,YAAIO,KAAK,CAAA,CAAE,IAAIA,KAAK,CAAA;MACtB;MACAE,QAAQ,IAAIF,SAAAA;AACVX,uBAAe,MAAMY,qBAAqB,UAAA,GAAaD,IAAAA,CAAAA;AACvD,eAAOP,IAAIO,KAAK,CAAA,CAAE;MACpB;IACF;EACF,GAAG;IAACrB;IAAOU;GAAa;AAExBc,8BAAU,MAAA;AACR,UAAMC,WAAWC,OAAO5B,aAAAA,KAAkB,CAAA;AAC1C,QAAI,CAAC2B,SAASE;AAAQ;AAEtB,eAAWC,WAAWH,UAAU;AAC9BI,uBAAiBD,OAAAA;IACnB;EACF,GAAG,CAAA,CAAE;AAEL,SAAO1B;AACT,GAjCyB;AAmCzB,MAAMoB,uBAAuB,2BAAIM,YAC/B,6BAAAxB,QAAA,cAAC0B,UAAAA;EACCC,yBAAyB;IACvBC,QAAQ,UAAUlC,aAAAA,aAA0BA,aAAAA,iBAA8BA,aAAAA,SAAsBmC,KAAKC,UACnGN,OAAAA,EACAO,WAAW,MAAM,MAAA,CAAA;EACrB;IANyB;AAU7B,MAAMN,mBAAmB,wBAACD,YAAAA;AACxB,MAAI,OAAOF,WAAW;AAAa;AAEnC,UAAQE,QAAQ,CAAA,GAAE;IAChB,KAAK,OAAO;AACVQ,uBAAAA,QAAUhB,IACRQ,QAAQ,CAAA,GACRA,QAAQ,CAAA,GACRA,QAAQ,CAAA,KAAMS,4BAA4BT,QAAQ,CAAA,CAAE,CAAA;AAEtD;IACF;IAEA,KAAK,UAAU;AACbQ,uBAAAA,QAAUb,OACRK,QAAQ,CAAA,GACRA,QAAQ,CAAA,KAAMS,4BAA4BT,QAAQ,CAAA,CAAE,CAAA;AAEtD;IACF;EACF;AACF,GArByB;AAuBzB,MAAMS,8BAA8B,wBAClCC,gBACsB;EACtB,GAAGA;EACHC,SACE,OAAOD,WAAWC,YAAY,WAC1B,IAAIC,KAAKF,WAAWC,OAAO,IAC3BD,WAAWC;AACnB,IARoC;","names":["windowVarName","CookiesProvider","value","children","cookies","useCookieRecords","React","Ctx","Provider","SecureCookiesProvider","secureValue","useSecureCookies","insertedHTML","useContext","ServerInsertedHTMLContext","useMemo","map","Object","fromEntries","c","name","get","set","args","getCookieCommandHtml","remove","useEffect","commands","window","length","command","runCookieCommand","script","dangerouslySetInnerHTML","__html","JSON","stringify","replaceAll","jsCookies","deserializeCookieAttributes","attributes","expires","Date"]}