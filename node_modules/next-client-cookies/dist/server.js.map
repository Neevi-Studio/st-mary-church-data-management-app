{"version":3,"sources":["../src/server.tsx"],"sourcesContent":["import { cookies } from 'next/headers';\nimport { CookieAttributes, Cookies } from './types';\nimport type { ResponseCookie } from 'next/dist/compiled/@edge-runtime/cookies';\nimport React, { FC, ReactNode } from 'react';\nimport { SecureCookiesProvider } from './provider';\nimport { storeSecureCookies } from './secure';\n\nexport const CookiesProvider: FC<{ children: ReactNode }> = ({ children }) => {\n  const secretValue = cookies().getAll();\n\n  return (\n    <SecureCookiesProvider value={storeSecureCookies(secretValue)}>\n      {children}\n    </SecureCookiesProvider>\n  );\n};\n\nexport const getCookies = (): Cookies => {\n  const org = cookies();\n\n  return {\n    get: (name?: string) =>\n      (name == null\n        ? Object.fromEntries(org.getAll().map((c) => [c.name, c.value]))\n        : org.get(name)?.value) as never,\n\n    set: (name, value, options) => {\n      const pre = org.get(name)?.value;\n      org.set(name, value, options && convertCookieAttributes(options));\n      return pre;\n    },\n\n    remove: (name) => org.delete(name),\n  };\n};\n\nconst convertCookieAttributes = (\n  options: CookieAttributes,\n): Partial<ResponseCookie> => ({\n  expires:\n    typeof options.expires === 'number'\n      ? options.expires * 864e5\n      : options.expires,\n  path: options.path,\n  domain: options.domain,\n  secure: options.secure,\n  sameSite: options.sameSite?.toLowerCase() as\n    | 'strict'\n    | 'lax'\n    | 'none'\n    | undefined,\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAAA,qBAAwB;AAGxB,mBAAqC;AACrC,sBAAsC;AACtC,oBAAmC;AAE5B,MAAMA,kBAA+C,wBAAC,EAAEC,SAAQ,MAAE;AACvE,QAAMC,kBAAcC,wBAAAA,EAAUC,OAAM;AAEpC,SACE,6BAAAC,QAAA,cAACC,uCAAAA;IAAsBC,WAAOC,kCAAmBN,WAAAA;KAC9CD,QAAAA;AAGP,GAR4D;AAUrD,MAAMQ,aAAa,6BAAA;AACxB,QAAMC,UAAMP,wBAAAA;AAEZ,SAAO;IACLQ,KAAK,CAACC,SACHA,QAAQ,OACLC,OAAOC,YAAYJ,IAAIN,OAAM,EAAGW,IAAI,CAACC,MAAM;MAACA,EAAEJ;MAAMI,EAAET;KAAM,CAAA,IAC5DG,IAAIC,IAAIC,IAAAA,GAAOL;IAErBU,KAAK,CAACL,MAAML,OAAOW,YAAAA;AACjB,YAAMC,MAAMT,IAAIC,IAAIC,IAAAA,GAAOL;AAC3BG,UAAIO,IAAIL,MAAML,OAAOW,WAAWE,wBAAwBF,OAAAA,CAAAA;AACxD,aAAOC;IACT;IAEAE,QAAQ,CAACT,SAASF,IAAIY,OAAOV,IAAAA;EAC/B;AACF,GAjB0B;AAmB1B,MAAMQ,0BAA0B,wBAC9BF,aAC6B;EAC7BK,SACE,OAAOL,QAAQK,YAAY,WACvBL,QAAQK,UAAU,QAClBL,QAAQK;EACdC,MAAMN,QAAQM;EACdC,QAAQP,QAAQO;EAChBC,QAAQR,QAAQQ;EAChBC,UAAUT,QAAQS,UAAUC,YAAAA;AAK9B,IAfgC;","names":["CookiesProvider","children","secretValue","cookies","getAll","React","SecureCookiesProvider","value","storeSecureCookies","getCookies","org","get","name","Object","fromEntries","map","c","set","options","pre","convertCookieAttributes","remove","delete","expires","path","domain","secure","sameSite","toLowerCase"]}