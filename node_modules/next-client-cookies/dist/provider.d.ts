import { FC, ReactNode } from 'react';
import { Cookies } from './types';
import { CookieRecord, SecureValueRef } from './secure';
type CookieCommand = {
    [key in keyof Cookies]: [key, ...Parameters<Cookies[key]>];
}['set' | 'remove'];
type SerializedValue<T> = {
    [K in keyof T]: Date extends T[K] ? string : object extends T[K] ? SerializedValue<T[K]> : T[K];
};
declare const windowVarName = "__cookies_commands";
declare global {
    interface Window {
        [windowVarName]: SerializedValue<CookieCommand>[];
    }
}
/**
 * @deprecated Use `<CookiesProvider />` from `next-client-cookies/server` instead.
 */
export declare const CookiesProvider: FC<{
    value: CookieRecord[];
    children: ReactNode;
}>;
export declare const SecureCookiesProvider: FC<{
    value: SecureValueRef;
    children: ReactNode;
}>;
export {};
//# sourceMappingURL=provider.d.ts.map